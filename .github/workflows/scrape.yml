name: Scrape latest data

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 1 * * *'

env:
  GITHUB_TOKEN: ${{ secrets.PAT_AMD }}

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT_AMD }}
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install deps
      run: >-
          python -m pip install --upgrade pip &&
          pip install beautifulsoup4 && pip install requests
    - name: Check for AMD new versions
      run: |-
        echo "old_link=$(cat link.txt)" >> $GITHUB_ENV
        python clean.py > link.txt
        echo "link=$(cat link.txt)" >> $GITHUB_ENV
        echo "options=${cat curl_options.txt}" >> $GITHUB_ENV
    - name: Update curl
      if: env.link != env.old_link
      run: |-
        sudo add-apt-repository ppa:savoury1/curl34 -y
        sudo apt update
        sudo apt install curl -y        
    - name: Get tag version
      if: env.link != env.old_link 
      run: |-
        echo "tag_version=v${{ env.link }}" | grep -oP '(tag_version=v)|(\d\d\.\d\d?\.\d\d?)' | tr -d "\n" >> $GITHUB_ENV
    - name: Save new minimal setup
      if: env.link != env.old_link 
      run:  |-
        curl --create-dirs -O --output-dir "driver" '${{ env.link }}' '${{ env.options }}'
    - name: Prepare link for curl
      if: env.link != env.old_link 
      run: |-
        echo "version=${{ env.link }}" | grep -oP '(version=)|(\d\d\.\d\d?\.\d\d?)' | tr -d "\n" | tr  "."  "-" >> $GITHUB_ENV   
    - name: Fetch link for full setup
      if: env.link != env.old_link 
      run: |-
        python clean_full.py ${{env.version}} > link_full.txt
        echo "link_full=$(cat link_full.txt)" >> $GITHUB_ENV
    - name: Save new full setup
      if: env.link != env.old_link 
      run:  |-
        curl --create-dirs -O --output-dir "driver" '${{ env.link_full }}' '${{ env.options }}'
    - name: Create new Realease
      if: env.link != env.old_link 
      run: |-
        gh release create ${{ env.tag_version }}
        gh release upload ${{ env.tag_version }} ./driver/*.exe
    - name: Remove driver folder
      if: env.link != env.old_link 
      run: rm -rf ./driver    
    - name: Commit report
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push origin main
        

